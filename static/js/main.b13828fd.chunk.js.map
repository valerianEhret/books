{"version":3,"sources":["store/reducers/authors/authorsReducer.ts","store/reducers/books/booksReducer.ts","components/BackDrop.tsx","routes/routes.ts","components/AuthorForm.tsx","utils/date.ts","components/BookForm.tsx","pages/Books.tsx","pages/Authors.tsx","components/Main.tsx","pages/AddAuthor.tsx","pages/AddBook.tsx","pages/AboutAuthor.tsx","pages/AboutBook.tsx","pages/EditAuthor.tsx","pages/EditBook.tsx","components/Navbar.tsx","components/AppRouter.tsx","App.tsx","store/store.ts","index.tsx"],"names":["AuthorEvents","initialState","authors","id","first_name","last_name","isLoading","status","BooksEvent","authorsActions","payload","type","ADD_AUTHOR","SET_AUTHOR_STATUS","SET_AUTHOR_IS_LOADING","DELETE_AUTHOR","SET_AUTHOR","BackDrop","style","position","top","right","bottom","left","outline","overflow","backgroundColor","opacity","zIndex","justify","align","className","size","RouterNames","books","title","author_id","created_at","year","booksActions","REMOVE_BOOK","ADD_BOOK","SET_IS_LOADING","SET_STATUS","SET_BOOK","AuthorForm","withFormik","mapPropsToValues","props","myValues","lastName","firstName","validate","values","errors","trim","test","handleSubmit","submit","loading","handleChange","handleBlur","touched","onSubmit","Item","validateStatus","help","rules","required","name","placeholder","value","onChange","onBlur","htmlType","disabled","formatDate","date","y","getFullYear","m","getMonth","d","getDate","BookForm","authorID","setFieldValue","onFinish","moment","toDate","defaultValue","map","el","Option","routes","path","BOOKS","exact","component","useSelector","state","dispatch","useDispatch","columns","dataIndex","key","render","to","onClick","dataSource","authorFirstName","authorLastName","more","edit","delete","margin","AUTHORS","e","console","log","deleteAuthorTC","Object","keys","secondName","MAIN","Title","AUTHOR_CREATE","BOOK_CREATE","allAuthors","Date","ABOUT_AUTHOR","params","useParams","ABOUT_BOOK","filter","EDIT_AUTHOR","EDIT_BOOK","a","Navbar","Header","mode","theme","selectable","AppRouter","route","App","preloadedState","Content","rootReducer","combineReducers","action","copyState","forEach","b","newBookId","v1","newBook","stateCopy","persistedStateString","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunkMiddleware","subscribe","setItem","stringify","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"yIAiDYA,E,wJAzBNC,EAA6B,CAC/BC,QAAS,CACL,EAAK,CACDC,GAAI,IACJC,WAAY,SACZC,UAAW,UAEf,EAAK,CACDF,GAAI,IACJC,WAAY,oBACZC,UAAW,WAEf,EAAK,CACDF,GAAI,IACJC,WAAY,SACZC,UAAW,YAGnBC,WAAW,EACXC,OAAQ,S,SAMAP,K,wBAAAA,E,sCAAAA,E,8CAAAA,E,8BAAAA,E,yBAAAA,M,KAUL,ICrCKQ,EDgFCC,EACE,SAACC,GACR,MAAO,CACHC,KAAMX,EAAaY,WACnBF,YAJCD,EAOQ,SAACC,GACd,MAAO,CACHC,KAAMX,EAAaa,kBACnBH,YAVCD,EAaW,SAACC,GACjB,MAAO,CACHC,KAAMX,EAAac,sBACnBJ,YAhBCD,EAmBK,SAACC,GACX,MAAO,CACHC,KAAMX,EAAae,cACnBL,YAtBCD,EAyBE,SAACC,GAGR,MAAO,CACHC,KAAMX,EAAagB,WACnBN,Y,SEjICO,EAAqB,WAC9B,OACI,qBAAKC,MAAO,CACRC,SAAU,QACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,QAAS,EACTC,SAAU,OACVC,gBAAiB,QACjBC,QAAS,GACTC,OAAQ,KAVZ,SAYI,cAAC,IAAD,CAAKC,QAAS,SAAUC,MAAM,SAASC,UAAU,OAAjD,SACI,cAAC,IAAD,CAAMC,KAAK,e,8CDIfxB,K,0BAAAA,E,oBAAAA,E,qCAAAA,E,6BAAAA,E,sBAAAA,M,KASZ,IEpBYyB,EFoBNhC,EAAe,CACjBiC,MAAO,CACH,CACI/B,GAAI,IACJgC,MAAO,kBACPC,UAAW,IACXC,WAAY,aACZC,KAAM,cAEV,CACInC,GAAI,IACJgC,MAAO,iBACPC,UAAW,IACXC,WAAY,aACZC,KAAM,cAEV,CACInC,GAAI,IACJgC,MAAO,yBACPC,UAAW,IACXC,WAAY,aACZC,KAAM,cAEV,CACInC,GAAI,IACJgC,MAAO,qBACPC,UAAW,IACXC,WAAY,aACZC,KAAM,eAGd/B,OAAQ,OACRD,WAAW,GAmDFiC,EACG,SAACpC,GACT,MAAO,CACHQ,KAAMH,EAAWgC,YACjB9B,QAASP,IAJRoC,EAOA,SAAC7B,GACN,MAAO,CACHC,KAAMH,EAAWiC,SACjB/B,YAVC6B,EAaK,SAAC7B,GACX,MAAO,CACHC,KAAMH,EAAWkC,eACjBhC,YAhBC6B,EAmBE,SAAC7B,GACR,MAAO,CACHC,KAAMH,EAAWmC,WACjBjC,YAtBC6B,EAyBG,SAAC7B,GACT,MAAO,CACHC,KAAMH,EAAWoC,SACjBlC,Y,2BG7ECmC,EAAaC,YAA8B,CACpDC,iBAAkB,SAACC,GAAD,OAAYA,EAAMC,SAAWD,EAAMC,SAAW,CAACC,SAAU,GAAIC,UAAW,KAC1FC,SAAU,SAACC,GACP,IAAMC,EAAmC,GAYzC,OAXKD,EAAOF,WAAcE,EAAOF,UAAUI,OAE/B,cAAcC,KAAKH,EAAOF,aAClCG,EAAOH,UAAY,wBAFnBG,EAAOH,UAAY,0BAKlBE,EAAOH,UAAaG,EAAOH,SAASK,OAE7B,cAAcC,KAAKH,EAAOH,YAClCI,EAAOJ,SAAW,wBAFlBI,EAAOJ,SAAW,0BAIfI,GAGXG,aAAc,SAACJ,EAAD,GAAqB,EAAXL,MACdU,OAAOL,KAnBKP,EA1CtB,SAAC,GAEO,IADHa,EACE,EADFA,QAASN,EACP,EADOA,OAAQO,EACf,EADeA,aAAcC,EAC7B,EAD6BA,WAAYJ,EACzC,EADyCA,aAAcH,EACvD,EADuDA,OAAQQ,EAC/D,EAD+DA,QAElE,OACI,uBAAMC,SAAUN,EAAhB,UACI,cAAC,IAAKO,KAAN,CACIC,eAAgBH,EAAQX,WAAaG,EAAOH,UAAY,QAAU,UAClEe,KAAMJ,EAAQX,WAAaG,EAAOH,UAClCgB,MAAO,CAAC,CAACC,UAAU,IAHvB,SAKI,cAAC,IAAD,CACIC,KAAK,YACLC,YAAY,YACZC,MAAOlB,EAAOF,UACdqB,SAAUZ,EACVa,OAAQZ,MAGhB,cAAC,IAAKG,KAAN,CACIC,eAAgBH,EAAQZ,UAAYI,EAAOJ,SAAW,QAAU,UAChEgB,KAAMJ,EAAQZ,UAAYI,EAAOJ,SACjCiB,MAAO,CAAC,CAACC,UAAU,IAHvB,SAKI,cAAC,IAAD,CACIC,KAAK,WACLC,YAAY,WACZC,MAAOlB,EAAOH,SACdsB,SAAUZ,EACVa,OAAQZ,MAIhB,cAAC,IAAKG,KAAN,UACI,cAAC,IAAD,CAAQrD,KAAK,UAAU+D,SAAS,SAASC,SAAUhB,EAAnD,4B,2CCxDPiB,EAAa,SAACC,GACvB,IAAMC,EAAID,EAAKE,cACTC,EAAIH,EAAKI,WAAa,GAAlB,WAA2BJ,EAAKI,WAAW,GAAMJ,EAAKI,WAAa,EACvEC,EAAIL,EAAKM,UAAY,GAAjB,WAA0BN,EAAKM,WAAaN,EAAKM,UAC3D,MAAM,GAAN,OAAUL,EAAV,YAAeE,EAAf,YAAoBE,ICuGXE,EAAWtC,YAA8B,CAClDC,iBAAkB,SAACC,GACf,OAAOA,EAAMC,SAAWD,EAAMC,SAAW,CACrCd,MAAO,GACPG,KAAM,KACN+C,SAAU,KAGlBjC,SAAU,SAACC,GACP,IAAMC,EAAmC,GAWzC,OAVKD,EAAOlB,OAAUkB,EAAOlB,MAAMoB,SAC/BD,EAAOnB,MAAQ,2BAEdkB,EAAOf,OACRgB,EAAOhB,KAAO,2BAEbe,EAAOgC,WAER/B,EAAO+B,SAAW,2BAEf/B,GAEXG,aAAc,SAACJ,EAAD,GAAqB,EAAXL,MACdU,OAAOL,KAvBGP,EAvEpB,SAAC,GAUO,IATH5C,EASE,EATFA,QACAyD,EAQE,EARFA,QACAN,EAOE,EAPFA,OACAO,EAME,EANFA,aACAC,EAKE,EALFA,WACAJ,EAIE,EAJFA,aACAH,EAGE,EAHFA,OACAQ,EAEE,EAFFA,QACAwB,EACE,EADFA,cAOD,OACI,eAAC,IAAD,CAAMC,SAAU9B,EAAhB,UACI,cAAC,IAAKO,KAAN,CACIC,eAAgBH,EAAQ3B,OAASmB,EAAOnB,MAAQ,QAAU,UAC1D+B,KAAMJ,EAAQ3B,OAASmB,EAAOnB,MAFlC,SAII,cAAC,IAAD,CACIkC,KAAK,QACLC,YAAY,QACZC,MAAOlB,EAAOlB,MACdqC,SAAUZ,EACVa,OAAQZ,MAGhB,cAAC,IAAKG,KAAN,CACIC,eAAgBH,EAAQxB,MAAQgB,EAAOhB,KAAO,QAAU,UACxD4B,KAAMJ,EAAQxB,MAAQgB,EAAOhB,KAFjC,SAII,cAAC,IAAD,CAAY+B,KAAK,OAAOE,MAAOlB,EAAOf,KAAOkD,IAAOnC,EAAOf,MAAQ,KAAMkC,SAvBlE,SAACK,GACZA,GACAS,EAAc,OAAQV,EAAWC,EAAKY,gBAwBtC,cAAC,IAAKzB,KAAN,CACIK,KAAK,WACLJ,eAAgBH,EAAQuB,UAAY/B,EAAO+B,SAAW,QAAU,UAChEnB,KAAMJ,EAAQuB,UAAY/B,EAAO+B,SAHrC,SAKI,cAAC,IAAD,CACIK,aAAcrC,EAAOgC,SACrBZ,OAAQZ,EACRW,SAAU,SAACD,GAAD,OAAWe,EAAc,WAAYf,IAHnD,SAMQrE,EAAQyF,KAAI,SAAAC,GAAE,OACV,cAAC,IAAOC,OAAR,CAEItB,MAAOqB,EAAGzF,GAFd,mBAIQyF,EAAGxF,WAJX,YAIyBwF,EAAGvF,YAHnBuF,EAAGzF,WAW5B,cAAC,IAAK6D,KAAN,UACI,cAAC,IAAD,CAAQrD,KAAK,UAAU+D,SAAS,SAASC,SAAUhB,EAAnD,iE,SHvFR1B,K,eAAAA,E,mBAAAA,E,SAAAA,E,+BAAAA,E,2BAAAA,E,2BAAAA,E,uBAAAA,E,+BAAAA,E,4BAAAA,M,KAmBL,IAAM6D,EAAmB,CAC5B,CACIC,KAAM9D,EAAY+D,MAClBC,OAAO,EACPC,UIxBuB,WAAO,IAAD,EAENC,aAA2C,SAAAC,GAAK,OAAIA,EAAMlE,SAA9EA,EAF0B,EAE1BA,MAAO5B,EAFmB,EAEnBA,UACPJ,EAAWiG,aAA6C,SAAAC,GAAK,OAAIA,EAAMlG,WAAvEA,QACDmG,EAAWC,cAEXC,EAAU,CACZ,CACIpE,MAAO,QACPqE,UAAW,QACXC,IAAK,SAET,CACItE,MAAO,kBACPqE,UAAW,kBACXC,IAAK,mBAET,CACItE,MAAO,iBACPqE,UAAW,iBACXC,IAAK,kBAET,CACItE,MAAM,OACNqE,UAAU,OACVC,IAAI,QAER,CACItE,MAAM,OACNqE,UAAa,OACbC,IAAI,OACJC,OAAQ,SAACvG,GAAD,OAAgB,cAAC,IAAD,CAASwG,GAAE,gBAAWxG,GAAtB,oBAG5B,CACIgC,MAAO,OACPsE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAACvG,GAAD,OAAgB,cAAC,IAAD,CAASwG,GAAE,qBAAgBxG,GAA3B,oBAE5B,CACIgC,MAAO,SACPsE,IAAK,SACLD,UAAW,SACXE,OAAQ,SAACvG,GAAD,OAAgB,cAAC,IAAD,CAAQyG,QAAS,WAAKP,EAAS9D,EAAwBpC,KAAvD,uBAI1B0G,EAAa3E,EAAMyD,KAAI,SAAAC,GACzB,MAAO,CACHa,IAAKb,EAAGzF,GACRgC,MAAMyD,EAAGzD,MACT2E,gBAAiB5G,EAAQ0F,EAAGxD,WAAYlC,EAAQ0F,EAAGxD,WAAWhC,WAAa,GAC3E2G,eAAe7G,EAAQ0F,EAAGxD,WAAYlC,EAAQ0F,EAAGxD,WAAW/B,UAAY,GACxEiC,KAAKsD,EAAGtD,KACR0E,KAAMpB,EAAGzF,GACT8G,KAAMrB,EAAGzF,GACT+G,OAAQtB,EAAGzF,OAInB,OACI,qCACKG,GAAa,cAAC,EAAD,IACd,sBAAKY,MAAO,CAACiG,OAAQ,IAArB,UACA,cAAC,IAAD,CAAKtF,QAAS,MAAd,SAAqB,cAAC,IAAD,CAAQlB,KAAK,OAAb,SAAoB,cAAC,IAAD,CACrCgG,GAAI,eADiC,yBAGrC,cAAC,IAAD,CAAQJ,QAASA,EACTM,WAAYA,YJ3ChC,CACId,KAAM9D,EAAYmF,QAClBnB,OAAO,EACPC,UK9ByB,WAAO,IAAD,EAENC,aAA6C,SAAAC,GAAK,OAAIA,EAAMlG,WAAlFA,EAF4B,EAE5BA,QAASI,EAFmB,EAEnBA,UACV+F,EAAWC,cAEXC,EAAU,CACZ,CACIpE,MAAO,YACPqE,UAAW,YACXC,IAAK,aAET,CACItE,MAAO,aACPqE,UAAW,aACXC,IAAK,cAET,CACItE,MAAO,OACPqE,UAAW,OACXC,IAAK,UACLC,OAAQ,SAACvG,GAAD,OAAgB,cAAC,IAAD,CAASwG,GAAE,kBAAaxG,GAAxB,oBAE5B,CACIgC,MAAO,OACPsE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAACvG,GAAD,OAAgB,cAAC,IAAD,CAASwG,GAAE,uBAAkBxG,GAA7B,oBAE5B,CACIgC,MAAO,SACPsE,IAAK,SACLD,UAAW,SACXE,OAAO,SAACvG,GAAD,OAAc,cAAC,IAAD,CAAQyG,QAAU,WAAKP,ERkH1B,SAAClG,GAAD,OAA4B,SAACkG,GACvDA,EAAS5F,GAAkC,IAC3C,IACI4F,EAAS5F,EAA4BN,IACvC,MAAOkH,GACLC,QAAQC,IAAI,UAAWF,GAH3B,QAKIhB,EAAS5F,GAAkC,MQzHc+G,CAAerH,KAA/C,uBAOvB0G,EAFOY,OAAOC,KAAKxH,GAEAyF,KAAK,SAACxF,GAC3B,MAAO,CACHsG,IAAK,MACLtD,UAAWjD,EAAQC,GAAIC,WACvBuH,WAAYzH,EAAQC,GAAIE,UACxB2G,KAAM7G,EACN8G,KAAM9G,EACN+G,OAAQ/G,MAIhB,OACI,qCACKG,GAAa,cAAC,EAAD,IACd,sBAAKY,MAAO,CAACiG,OAAQ,IAArB,UACI,cAAC,IAAD,CAAKtF,QAAS,MAAd,SAAqB,cAAC,IAAD,CAAQlB,KAAK,OAAb,SAAoB,cAAC,IAAD,CACrCgG,GAAI,iBADiC,yBAGzC,cAAC,IAAD,CAAQJ,QAASA,EACTM,WAAYA,YL1BhC,CACId,KAAM9D,EAAY2F,KAClB3B,OAAO,EACPC,UMvCsB,WAC1B,OACI,cAAC,IAAD,CAAKrE,QAAS,SAAUC,MAAO,SAAUC,UAAW,OAApD,SACI,eAAC,IAAD,WACI,cAAC,IAAW8F,MAAZ,UAAkB,cAAC,IAAD,CAASlB,GAAI,SAAb,qBAClB,cAAC,IAAWkB,MAAZ,UAAkB,cAAC,IAAD,CAASlB,GAAI,WAAb,8BNoC9B,CACIZ,KAAM9D,EAAY6F,cAClB7B,OAAO,EACPC,UOxC0B,WAAO,IAAD,EAERC,aAA6C,SAAAC,GAAK,OAAIA,EAAMlG,WAAjFI,EAF6B,EAE7BA,UAAWC,EAFkB,EAElBA,OACZ8F,EAAWC,cAOjB,MAAe,YAAX/F,EAA6B,cAAC,IAAD,CAAUoG,GAAI,aAE3C,cAAC,IAAD,UACI,cAAC,IAAD,CAAK9E,QAAQ,SAASC,MAAM,SAASC,UAAU,OAA/C,SACI,cAACc,EAAD,CAAYa,OATA,SAACL,GACrB,IV8HoB3C,EU9HdyC,EAAYE,EAAOF,UAAUI,OAC7BL,EAAWG,EAAOH,SAASK,OACjC8C,GV4HoB3F,EU5HC,CAACyC,YAAWD,YV4HsD,SAACmD,GAC5FA,EAAS5F,GAAkC,IAC3C,IACI4F,EAAS5F,EAAyBC,IAClC2F,EAAS5F,EAA+B,YAC1C,MAAO4G,GACLC,QAAQC,IAAI,QAASF,GAJzB,QAMIhB,EAAS5F,GAAkC,IAC3C4F,EAAS5F,EAA+B,cU/HKkD,QAASrD,UP4B1D,CACIyF,KAAM9D,EAAY8F,YAClB9B,OAAO,EACPC,UQ5CyB,WAAM,MAIPC,aAA2C,SAAAC,GAAK,OAAIA,EAAMlE,SAA/E5B,EAJ4B,EAI5BA,UAAWC,EAJiB,EAIjBA,OACZ8F,EAAWC,cAIVpG,EAAWiG,aAA4C,SAAAC,GAAK,OAAIA,EAAMlG,WAAtEA,QAGD8H,EADcP,OAAOC,KAAKxH,GACDyF,KAAI,SAAAxF,GAAE,OAAID,EAAQC,MAYjD,MAAe,YAAXI,EAA6B,cAAC,IAAD,CAAUoG,GAAI,WAE3C,cAAC,IAAD,UACI,cAAC,IAAD,CAAK9E,QAAQ,SAASC,MAAM,SAASC,UAAU,OAA/C,SACI,cAACqD,EAAD,CAAUzB,QAASrD,EAAWoD,OAflB,SAACL,GV8HJ,IAAE3C,EU7Hf2C,EAAOf,MACP+D,GV4He3F,EU5HM,CACbyB,MAAOkB,EAAOlB,MACdC,UAAWiB,EAAOgC,SAClB/C,KAAMe,EAAOf,KACbD,WAAYuC,EAAW,IAAIqD,OVyH3C,SAAC5B,GACDA,EAAS9D,GAA0B,IACnC,IACI8D,EAAS9D,EAAqB7B,IAC9B2F,EAAS9D,EAAuB,YAClC,MAAM8E,GACJC,QAAQC,IAAI,UAAWF,GAJ3B,QAMIhB,EAAS9D,GAA0B,IACnC8D,EAAS9D,EAAuB,cUzH+BrC,QAAS8H,URkB5E,CACIjC,KAAM9D,EAAYiG,aAClBjC,OAAO,EACPC,USnDuB,WAC3B,IAAMiC,EAASC,cACTlI,EAAUiG,aAA4C,SAAAC,GAAK,OAAIA,EAAMlG,WAC3E,OAEI,cAAC,IAAD,CAAK2B,QAAS,SAAUC,MAAO,SAAUC,UAAW,OAApD,SACI,eAAC,IAAD,WACI,eAAC,IAAW8F,MAAZ,0BAA+B3H,EAAQA,QAAQiI,EAAOhI,IAAIC,cAC1D,eAAC,IAAWyH,MAAZ,yBAA8B3H,EAAQA,QAAQiI,EAAOhI,IAAIE,oBT6CrE,CACI0F,KAAM9D,EAAYoG,WAClBpC,OAAO,EACPC,UUvD2B,WAC/B,IAAMiC,EAASC,cACTlG,EAAQiE,aAA0C,SAAAC,GAAK,OAAIA,EAAMlE,SACjEhC,EAAUiG,aAA4C,SAAAC,GAAK,OAAIA,EAAMlG,WAC3E,OAEI,cAAC,IAAD,CAAK2B,QAAS,SAAUC,MAAO,SAAUC,UAAW,OAApD,SACI,eAAC,IAAD,WACI,eAAC,IAAW8F,MAAZ,yBAA8B3F,EAAMA,MAAMoG,QAAO,SAAA1C,GAAE,OAAGA,EAAGzF,KAAOgI,EAAOhI,MAAI,GAAGgC,SAC9E,eAAC,IAAW0F,MAAZ,mCAAwC3H,EAAQA,QAAQgC,EAAMA,MAAMoG,QAAO,SAAA1C,GAAE,OAAGA,EAAGzF,KAAOgI,EAAOhI,MAAI,GAAGiC,WAAWhC,cACnH,eAAC,IAAWyH,MAAZ,kCAAuC3H,EAAQA,QAAQgC,EAAMA,MAAMoG,QAAO,SAAA1C,GAAE,OAAGA,EAAGzF,KAAOgI,EAAOhI,MAAI,GAAGiC,WAAW/B,aAClH,eAAC,IAAWwH,MAAZ,oBAAyB3F,EAAMA,MAAMoG,QAAO,SAAA1C,GAAE,OAAGA,EAAGzF,KAAOgI,EAAOhI,MAAI,GAAGmC,eV8CrF,CACIyD,KAAM9D,EAAYsG,YAClBtC,OAAO,EACPC,UW7D2B,WAAO,IAAD,EAEAC,aAA4C,SAAAC,GAAK,OAAIA,EAAMlG,WAAzFA,EAF8B,EAE9BA,QAASK,EAFqB,EAErBA,OAAQD,EAFa,EAEbA,UAFa,EAIDJ,EADrBkI,cACoCjI,IAA5CA,EAJ8B,EAI9BA,GAAIE,EAJ0B,EAI1BA,UAAWD,EAJe,EAIfA,WAChBiG,EAAWC,cAOjB,MAAe,YAAX/F,EAA6B,cAAC,IAAD,CAAUoG,GAAI,aAG1C,cAAC,IAAD,UACG,cAAC,IAAD,CAAK9E,QAAQ,SAASC,MAAM,SAASC,UAAU,OAA/C,SACI,cAACc,EAAD,CAAYa,OAVA,SAACL,GACrB,IdsJqB3C,EctJfyC,EAAYE,EAAOF,UAAUI,OAC7BL,EAAWG,EAAOH,SAASK,OACjC8C,GdoJqB3F,EcpJC,CAACP,KAAG+C,WAAUC,adqJxC,SAACkD,GACGA,EAAS5F,GAAkC,IAC3C,IACI4F,EAAS5F,EAAyBC,IAClC2F,EAAS5F,EAA+B,YAC1C,MAAO4G,GACLC,QAAQC,IAAI,UAAWF,GAJ3B,QAMIhB,EAAS5F,GAAkC,IAC3C4F,EAAS5F,EAA+B,ccvJCwC,SAAU,CAACC,SAAU7C,EAAW8C,UAAW/C,GACpEuD,QAASrD,UX6CjC,CACIyF,KAAM9D,EAAYuG,UAClBvC,OAAO,EACPC,UYjEyB,WAAO,IAAD,EACAC,aAA0C,SAAAC,GAAK,OAAIA,EAAMlE,SAArF5B,EAD4B,EAC5BA,UAAWC,EADiB,EACjBA,OAAQ2B,EADS,EACTA,MACnBhC,EAAWiG,aAA4C,SAAAC,GAAK,OAAIA,EAAMlG,WAAtEA,QACDmG,EAAWC,cACVnG,EAAMiI,cAANjI,GAJ4B,EAKF+B,EAAMoG,QAAO,SAAA1C,GAAE,OAAIA,EAAGzF,KAAOA,KAAI,GAA3DgC,EAL4B,EAK5BA,MAAOG,EALqB,EAKrBA,KAAMF,EALe,EAKfA,UAEd4F,EADcP,OAAOC,KAAKxH,GACDyF,KAAI,SAAAN,GAAQ,OAAInF,EAAQmF,MAMvD,MAAe,YAAX9E,EAA6B,cAAC,IAAD,CAAUoG,GAAI,WAE3C,cAAC,IAAD,UACI,cAAC,IAAD,CAAK9E,QAAQ,SAASC,MAAM,SAASC,UAAU,OAA/C,SACI,cAACqD,EAAD,CAAUzB,QAASrD,EAAWoD,OATlB,SAACL,GdkJH,IAAC3C,EcjJf2C,EAAOf,MACP+D,GdgJe3F,EchJK,CAACP,GAAIA,EAAImC,KAAMe,EAAOf,KAAMH,MAAOkB,EAAOlB,MAAOkD,SAAUhC,EAAOgC,UdgJxE,uCACtB,WAAOgB,GAAP,SAAAoC,EAAA,sDACIpC,EAAS9D,GAA0B,IACnC,IACI8D,EAAS9D,EAAwB7B,IACjC2F,EAAS9D,EAAuB,YAClC,MAAO8E,GACLC,QAAQC,IAAI,UAAWF,GAJ3B,QAMIhB,EAAS9D,GAA0B,IACnC8D,EAAS9D,EAAuB,SATxC,2CADsB,yDczI6CrC,QAAS8H,EACtD/E,SAAU,CAACd,QAAOG,OAAM+C,SAAUjD,YCtB/CsG,EAAmB,WAC5B,OACI,cAAC,IAAOC,OAAR,UACI,cAAC,IAAD,CAAK9G,QAAS,SAAd,SACI,eAAC,IAAD,CAAM+G,KAAM,aAAcC,MAAO,OAAQC,YAAY,EAArD,UACI,cAAC,IAAK9E,KAAN,UACI,cAAC,IAAD,CAAS2C,GAAI1E,EAAY2F,KAAzB,mBADY3F,EAAY2F,MAG5B,cAAC,IAAK5D,KAAN,UACI,cAAC,IAAD,CAAS2C,GAAI1E,EAAY+D,MAAzB,oBADY/D,EAAY+D,OAG5B,cAAC,IAAKhC,KAAN,UACI,cAAC,IAAD,CAAS2C,GAAI1E,EAAYmF,QAAzB,sBADYnF,EAAYmF,iBCZnC2B,GAAsB,WAC/B,OACI,cAAC,IAAD,UAEQjD,EAAOH,KAAI,SAAAqD,GACP,OAAO,cAAC,IAAD,CACHjD,KAAMiD,EAAMjD,KACZE,MAAO+C,EAAM/C,MACbC,UAAW8C,EAAM9C,WACZ8C,EAAMjD,YCIpBkD,ICHXC,GDGWD,GAXf,WACE,OACE,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAOE,QAAR,CAAgBpH,UAAW,OAA3B,SACI,cAAC,GAAD,U,oBCHNqH,GAAcC,aAAgB,CAChCnH,MlB0DwB,WAA0E,IAAzEkE,EAAwE,uDAAhEnG,EAAcqJ,EAAkD,uCACjG,OAAQA,EAAO3I,MAEX,KAAKH,EAAWoC,SACX,IAAM2G,EAAS,2BAAOnD,GAAP,IAAclE,MAAO,YAAIkE,EAAMlE,OAAOyD,KAAI,SAAAC,GAAE,sBAAUA,QAQtE,OAPA2D,EAAUrH,MAAMsH,SAAQ,SAAA5D,GAChBA,EAAGzF,KAAOmJ,EAAO5I,QAAQP,KACzByF,EAAGxD,UAAYkH,EAAO5I,QAAQ2E,SAC9BO,EAAGtD,KAAOgH,EAAO5I,QAAQ4B,KACzBsD,EAAGzD,MAAQmH,EAAO5I,QAAQyB,UAG3B,eAAIoH,GAGf,KAAK/I,EAAWgC,YACZ,IAAM+G,EAAS,2BAAOnD,GAAP,IAAclE,MAAO,YAAIkE,EAAMlE,OAAOyD,KAAI,SAAAC,GAAE,sBAAUA,QACrE,OAAO,2BAAI2D,GAAX,IAAsBrH,MAAMqH,EAAUrH,MAAMoG,QAAO,SAAAmB,GAAC,OAAEA,EAAEtJ,KAAOmJ,EAAO5I,aAE1E,KAAKV,EAAae,cACd,IAAMwI,EAAS,2BAAOnD,GAAP,IAAclE,MAAO,YAAIkE,EAAMlE,OAAOyD,KAAI,SAAAC,GAAE,sBAASA,QACpE,OAAO,2BAAI2D,GAAX,IAAsBrH,MAAMqH,EAAUrH,MAAMoG,QAAQ,SAAA1C,GAAE,OAAIA,EAAGxD,YAAckH,EAAO5I,aAEtF,KAAKF,EAAWiC,SACZ,IAAMiH,EAAYC,cACZC,EAAiB,2BAChBN,EAAO5I,SADS,IACAP,GAAIuJ,IAE3B,MAAO,CAACtD,QAAOlE,MAAM,GAAD,mBAAMkE,EAAMlE,OAAZ,CAAmB0H,KAE3C,KAAKpJ,EAAWkC,eACZ,OAAO,2BAAI0D,GAAX,IAAkB9F,UAAWgJ,EAAO5I,UAExC,KAAKF,EAAWmC,WACZ,OAAO,2BAAIyD,GAAX,IAAkB7F,OAAQ+I,EAAO5I,UAGrC,QACI,OAAO0F,IkB/FflG,QnBiD0B,WAAuD,IAAtDkG,EAAqD,uDAA7CnG,EAAcqJ,EAA+B,uCAChF,OAAQA,EAAO3I,MACX,KAAMX,EAAaY,WACf,IAAMT,EAAKwJ,cACX,OAAO,2BACAvD,GADP,IACclG,QAAQ,2BACXkG,EAAMlG,SADI,kBAEZC,EAAK,CACFC,WAAYkJ,EAAO5I,QAAQyC,UAC3B9C,UAAWiJ,EAAO5I,QAAQwC,cAI1C,KAAKlD,EAAae,cACd,IAAM8I,EAAS,2BAAOzD,GAAP,IAAclG,QAAQ,eAAKkG,EAAMlG,WAEhD,cADO2J,EAAU3J,QAAQoJ,EAAO5I,SACzBmJ,EAEX,KAAK7J,EAAagB,WACd,OAAO,2BACAoF,GADP,IAEIlG,QAAQ,2BACDkG,EAAMlG,SADN,kBAEFoJ,EAAO5I,QAAQP,GAFb,2BAGIiG,EAAMlG,QAAQoJ,EAAO5I,QAAQP,KAHjC,IAICE,UAAWiJ,EAAO5I,QAAQwC,SAC1B9C,WAAYkJ,EAAO5I,QAAQyC,gBAK3C,KAAMnD,EAAaa,kBACf,OAAO,2BAAIuF,GAAX,IAAkB7F,OAAQ+I,EAAO5I,UACrC,KAAMV,EAAac,sBACf,OAAO,2BAAIsF,GAAX,IAAkB9F,UAAWgJ,EAAO5I,UACxC,QACI,OAAO,eAAI0F,OmBhFjB0D,GAAuBC,aAAaC,QAAQ,aAC9CF,KACAZ,GAAiBe,KAAKC,MAAMJ,KAGzB,IAAMK,GAAQC,aAAYhB,GAAaF,GAAgBmB,aAAgBC,OAgB9EH,GAAMI,WAAW,WAEbR,aAAaS,QAAQ,YAAaP,KAAKQ,UAAUN,GAAMO,gBC9B3DC,IAASjE,OACL,cAAC,IAAD,CAAUyD,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAMS,WAAP,UACI,cAAC,GAAD,UAIZC,SAASC,eAAe,W","file":"static/js/main.b13828fd.chunk.js","sourcesContent":["import {v1} from \"uuid\";\r\nimport {AppThunkType} from \"../../store\";\r\nimport {InferActionsType} from \"../../../models/InterActionsType\";\r\n\r\n//Types\r\nexport type AuthorsState = {\r\n    authors: {\r\n        [key: string]: AuthorType\r\n    },\r\n    isLoading: boolean,\r\n    status: StatusType\r\n}\r\n\r\n\r\nexport type AuthorType = {\r\n    id:string\r\n    first_name: string\r\n    last_name: string\r\n\r\n}\r\n\r\nexport type StatusType = 'success' | 'idle' | 'error'\r\n\r\n//Initial State\r\nconst initialState: AuthorsState = {\r\n    authors: {\r\n        '1': {\r\n            id: '1',\r\n            first_name: 'George',\r\n            last_name: 'Martin'\r\n        },\r\n        '2': {\r\n            id: '2',\r\n            first_name: 'John Ronald Reuel',\r\n            last_name: 'Tolkien'\r\n        },\r\n        '3': {\r\n            id: '3',\r\n            first_name: 'Joanne',\r\n            last_name: 'Rowling'\r\n        }\r\n    },\r\n    isLoading: false,\r\n    status: 'idle'\r\n\r\n}\r\n\r\n//AuthorEvents\r\n\r\nexport enum AuthorEvents {\r\n    ADD_AUTHOR = 'ADD_AUTHOR',\r\n    SET_AUTHOR_STATUS = 'SET_AUTHOR_STATUS',\r\n    SET_AUTHOR_IS_LOADING = 'SET_AUTHOR_IS_LOADING',\r\n    DELETE_AUTHOR = 'DELETE_AUTHOR',\r\n    SET_AUTHOR = 'SET_AUTHOR',\r\n}\r\n\r\n\r\n//Reducer\r\nexport const authorsReducer = (state = initialState, action: AuthorsActionsType) => {\r\n    switch (action.type) {\r\n        case  AuthorEvents.ADD_AUTHOR:\r\n            const id = v1()\r\n            return {\r\n                ...state, authors: {\r\n                    ...state.authors,\r\n                    [id]: {\r\n                        first_name: action.payload.firstName,\r\n                        last_name: action.payload.lastName\r\n                    }\r\n                }\r\n            }\r\n        case AuthorEvents.DELETE_AUTHOR:\r\n            const stateCopy = {...state, authors: {...state.authors}}\r\n            delete stateCopy.authors[action.payload]\r\n            return stateCopy\r\n\r\n        case AuthorEvents.SET_AUTHOR:\r\n            return {\r\n                ...state,\r\n                authors: {\r\n                    ...state.authors,\r\n                    [action.payload.id]: {\r\n                        ...state.authors[action.payload.id],\r\n                        last_name: action.payload.lastName,\r\n                        first_name: action.payload.firstName\r\n                    }\r\n                }\r\n            }\r\n\r\n        case  AuthorEvents.SET_AUTHOR_STATUS:\r\n            return {...state, status: action.payload}\r\n        case  AuthorEvents.SET_AUTHOR_IS_LOADING:\r\n            return {...state, isLoading: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//Actions\r\n\r\n\r\nexport const authorsActions = {\r\n    addAuthor: (payload: { firstName: string, lastName: string }) => {\r\n        return {\r\n            type: AuthorEvents.ADD_AUTHOR,\r\n            payload\r\n        } as const\r\n    },\r\n    setAuthorStatus: (payload: StatusType) => {\r\n        return {\r\n            type: AuthorEvents.SET_AUTHOR_STATUS,\r\n            payload\r\n        } as const\r\n    },\r\n    setAuthorIsLoading: (payload: boolean) => {\r\n        return {\r\n            type: AuthorEvents.SET_AUTHOR_IS_LOADING,\r\n            payload\r\n        } as const\r\n    },\r\n    deleteAuthor: (payload: string) => {\r\n        return {\r\n            type: AuthorEvents.DELETE_AUTHOR,\r\n            payload\r\n        } as const\r\n    },\r\n    setAuthor: (payload: {\r\n        id: string, lastName: string, firstName: string\r\n    }) => {\r\n        return {\r\n            type: AuthorEvents.SET_AUTHOR,\r\n            payload\r\n        } as const\r\n    },\r\n\r\n}\r\n//ActionsType\r\nexport type AuthorsActionsType = InferActionsType<typeof authorsActions>\r\n\r\n//Thunk\r\nexport const addAuthorTC = (payload: { lastName: string, firstName: string }): AppThunkType => (dispatch) => {\r\n    dispatch(authorsActions.setAuthorIsLoading(true))\r\n    try {\r\n        dispatch(authorsActions.addAuthor(payload))\r\n        dispatch(authorsActions.setAuthorStatus('success'))\r\n    } catch (e) {\r\n        console.log('Error', e)\r\n    } finally {\r\n        dispatch(authorsActions.setAuthorIsLoading(false))\r\n        dispatch(authorsActions.setAuthorStatus('idle'))\r\n    }\r\n\r\n}\r\n\r\nexport const deleteAuthorTC = (id:string):AppThunkType => (dispatch) => {\r\n    dispatch(authorsActions.setAuthorIsLoading(true))\r\n    try {\r\n        dispatch(authorsActions.deleteAuthor(id))\r\n    } catch (e) {\r\n        console.log('Error: ', e)\r\n    } finally {\r\n        dispatch(authorsActions.setAuthorIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const editAuthorTC = (payload: { id: string, lastName: string, firstName: string }): AppThunkType =>\r\n    (dispatch) => {\r\n        dispatch(authorsActions.setAuthorIsLoading(true))\r\n        try {\r\n            dispatch(authorsActions.setAuthor(payload))\r\n            dispatch(authorsActions.setAuthorStatus('success'))\r\n        } catch (e) {\r\n            console.log('Error: ', e)\r\n        } finally {\r\n            dispatch(authorsActions.setAuthorIsLoading(false))\r\n            dispatch(authorsActions.setAuthorStatus('idle'))\r\n        }\r\n    }\r\n","import {v1} from \"uuid\";\r\nimport {InferActionsType} from \"../../../models/InterActionsType\";\r\nimport {AuthorEvents, AuthorsActionsType} from \"../authors/authorsReducer\";\r\nimport {AppThunkType} from \"../../store\";\r\n\r\n\r\nexport type BooksState = {\r\n    books: Array<BookType>\r\n    status: StatusType\r\n    isLoading: boolean\r\n}\r\n\r\nexport type BookType = {\r\n    id: string\r\n    title: string\r\n    author_id: string\r\n    created_at: string\r\n    year: string\r\n}\r\n\r\nexport type StatusType = 'success' | 'idle' | 'error'\r\n\r\nexport enum BooksEvent {\r\n    REMOVE_BOOK = 'REMOVE_BOOK',\r\n    ADD_BOOK = 'ADD_BOOK',\r\n    SET_IS_LOADING = 'BOOK/SET_IS_LOADING',\r\n    SET_STATUS = 'BOOK/SET_STATUS',\r\n    SET_BOOK = 'SET_TITLE',\r\n}\r\n\r\n\r\nconst initialState = {\r\n    books: [\r\n        {\r\n            id: '1',\r\n            title: 'Game of Thrones',\r\n            author_id: '1',\r\n            created_at: '2021-10-05',\r\n            year: '1996-08-01'\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Clash of Kings',\r\n            author_id: '1',\r\n            created_at: '2021-10-05',\r\n            year: '1999-02-01'\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'The Return of the King',\r\n            author_id: '2',\r\n            created_at: '2021-10-05',\r\n            year: '1955-10-20'\r\n        },\r\n        {\r\n            id: '4',\r\n            title: 'Philosophers Stone',\r\n            author_id: '3',\r\n            created_at: '2021-10-05',\r\n            year: '1997-01-01'\r\n        }\r\n    ],\r\n    status: 'idle',\r\n    isLoading: false\r\n}\r\n\r\n\r\nexport const booksReducer = (state = initialState, action: BooksActionsType | AuthorsActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case BooksEvent.SET_BOOK: {\r\n             const copyState = {...state, books: [...state.books].map(el => ({ ...el }))}\r\n            copyState.books.forEach(el=> {\r\n                if (el.id === action.payload.id) {\r\n                    el.author_id = action.payload.authorID\r\n                    el.year = action.payload.year\r\n                    el.title = action.payload.title\r\n                }\r\n            })\r\n            return {...copyState}\r\n        }\r\n\r\n        case BooksEvent.REMOVE_BOOK: {\r\n            const copyState = {...state, books: [...state.books].map(el => ({ ...el }))}\r\n            return {...copyState, books:copyState.books.filter(b=>b.id !== action.payload)}\r\n        }\r\n        case AuthorEvents.DELETE_AUTHOR: {\r\n            const copyState = {...state, books: [...state.books].map(el => ({...el}))}\r\n            return {...copyState, books:copyState.books.filter( el => el.author_id !== action.payload)}\r\n        }\r\n        case BooksEvent.ADD_BOOK: {\r\n            const newBookId = v1()\r\n            const newBook: BookType = {\r\n                ...action.payload, id: newBookId\r\n            }\r\n            return {state, books: [...state.books, newBook]}\r\n        }\r\n        case BooksEvent.SET_IS_LOADING: {\r\n            return {...state, isLoading: action.payload}\r\n        }\r\n        case BooksEvent.SET_STATUS: {\r\n            return {...state, status: action.payload}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ActionsType\r\nexport type BooksActionsType = InferActionsType<typeof booksActions>\r\n\r\n\r\n// Actions\r\nexport const booksActions = {\r\n    removeBook: (id: string) => {\r\n        return {\r\n            type: BooksEvent.REMOVE_BOOK,\r\n            payload: id\r\n        } as const\r\n    },\r\n    addBook: (payload: { title: string, author_id: string, year: string, created_at: string }) => {\r\n        return {\r\n            type: BooksEvent.ADD_BOOK,\r\n            payload\r\n        } as const\r\n    },\r\n    setIsLoading: (payload: boolean) => {\r\n        return {\r\n            type: BooksEvent.SET_IS_LOADING,\r\n            payload\r\n        } as const\r\n    },\r\n    setStatus: (payload: StatusType) => {\r\n        return {\r\n            type: BooksEvent.SET_STATUS,\r\n            payload\r\n        } as const\r\n    },\r\n    changeBook: (payload: { id: string, title: string, year: string, authorID: string }) => {\r\n        return {\r\n            type: BooksEvent.SET_BOOK,\r\n            payload\r\n        } as const\r\n    },\r\n\r\n}\r\n//Thunk\r\n\r\nexport const addBookTC = ( payload :{title:string, author_id:string, year: string, created_at: string}  ): AppThunkType =>\r\n    (dispatch) => {\r\n    dispatch(booksActions.setIsLoading(true))\r\n    try {\r\n        dispatch(booksActions.addBook(payload))\r\n        dispatch(booksActions.setStatus('success'))\r\n    } catch(e) {\r\n        console.log('Error: ', e)\r\n    } finally {\r\n        dispatch(booksActions.setIsLoading(false))\r\n        dispatch(booksActions.setStatus('idle'))\r\n    }\r\n}\r\n\r\nexport const editBookTC = (payload: { id: string, title: string, year: string, authorID: string }): AppThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(booksActions.setIsLoading(true))\r\n        try {\r\n            dispatch(booksActions.changeBook(payload))\r\n            dispatch(booksActions.setStatus('success'))\r\n        } catch (e) {\r\n            console.log('Error: ', e)\r\n        } finally {\r\n            dispatch(booksActions.setIsLoading(false))\r\n            dispatch(booksActions.setStatus('idle'))\r\n        }\r\n    }","import React from 'react';\r\nimport {Row, Spin} from 'antd';\r\n\r\nexport const BackDrop: React.FC = () => {\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            outline: 0,\r\n            overflow: 'auto',\r\n            backgroundColor: 'black',\r\n            opacity: 0.5,\r\n            zIndex: 1000\r\n        }}>\r\n            <Row justify={'center'} align=\"middle\" className=\"h100\">\r\n                <Spin size=\"large\"/>\r\n            </Row>\r\n        </div>\r\n    );\r\n};","import {Main} from \"../components/Main\";\r\nimport {Authors} from \"../pages/Authors\";\r\nimport {Books} from \"../pages/Books\";\r\nimport {AddAuthor} from \"../pages/AddAuthor\";\r\nimport React from \"react\";\r\nimport {AddBook} from \"../pages/AddBook\";\r\nimport {AboutAuthor} from \"../pages/AboutAuthor\";\r\nimport {AboutBook} from \"../pages/AboutBook\";\r\nimport {EditAuthor} from \"../pages/EditAuthor\";\r\nimport {EditBook} from \"../pages/EditBook\";\r\n\r\nexport enum RouterNames {\r\n    BOOKS = '/books',\r\n    AUTHORS = '/authors',\r\n    MAIN = '/',\r\n    AUTHOR_CREATE = '/author/create',\r\n    BOOK_CREATE = '/book/create',\r\n    ABOUT_AUTHOR = '/author/:id',\r\n    ABOUT_BOOK = '/book/:id',\r\n    EDIT_AUTHOR = '/author/edit/:id',\r\n    EDIT_BOOK = '/book/edit/:id',\r\n}\r\n\r\ninterface IRoute {\r\n    path: string\r\n    component: React.ComponentType\r\n    exact: boolean\r\n}\r\n\r\n\r\nexport const routes: IRoute[] = [\r\n    {\r\n        path: RouterNames.BOOKS,\r\n        exact: true,\r\n        component: Books\r\n    },\r\n    {\r\n        path: RouterNames.AUTHORS,\r\n        exact: true,\r\n        component: Authors\r\n    },\r\n    {\r\n        path: RouterNames.MAIN,\r\n        exact: true,\r\n        component: Main\r\n    },\r\n    {\r\n        path: RouterNames.AUTHOR_CREATE,\r\n        exact: true,\r\n        component: AddAuthor\r\n    },\r\n    {\r\n        path: RouterNames.BOOK_CREATE,\r\n        exact: true,\r\n        component: AddBook\r\n    },\r\n    {\r\n        path: RouterNames.ABOUT_AUTHOR,\r\n        exact: true,\r\n        component: AboutAuthor\r\n    },\r\n    {\r\n        path: RouterNames.ABOUT_BOOK,\r\n        exact: true,\r\n        component: AboutBook\r\n    },\r\n    {\r\n        path: RouterNames.EDIT_AUTHOR,\r\n        exact: true,\r\n        component: EditAuthor\r\n    },\r\n    {\r\n        path: RouterNames.EDIT_BOOK,\r\n        exact: true,\r\n        component: EditBook\r\n    },\r\n]","import React, {FC} from 'react';\r\nimport {Button, Form, Input} from 'antd';\r\nimport {FormikProps, withFormik, FormikErrors} from 'formik';\r\n\r\n\r\nexport interface FormValues {\r\n    firstName: string\r\n    lastName: string\r\n}\r\n\r\nexport interface Props {\r\n    myValues?: FormValues\r\n    submit: (payload: FormValues) => void\r\n    loading: boolean\r\n}\r\n\r\ninterface OtherProps {\r\n    loading: boolean,\r\n    myValues?: FormValues\r\n}\r\n\r\n\r\nconst InnerForm: FC<OtherProps & FormikProps<FormValues>> =\r\n    ({\r\n         loading, values, handleChange, handleBlur, handleSubmit, errors, touched\r\n     }) => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <Form.Item\r\n                    validateStatus={touched.firstName && errors.firstName ? 'error' : 'success'}\r\n                    help={touched.firstName && errors.firstName}\r\n                    rules={[{required: true}]}\r\n                >\r\n                    <Input\r\n                        name=\"firstName\"\r\n                        placeholder=\"firstName\"\r\n                        value={values.firstName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    validateStatus={touched.lastName && errors.lastName ? 'error' : 'success'}\r\n                    help={touched.lastName && errors.lastName}\r\n                    rules={[{required: true}]}\r\n                >\r\n                    <Input\r\n                        name=\"lastName\"\r\n                        placeholder=\"lastName\"\r\n                        value={values.lastName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                        Create\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n            </form>\r\n        );\r\n    }\r\n\r\nexport const AuthorForm = withFormik<Props, FormValues>({\r\n    mapPropsToValues: (props) => (props.myValues ? props.myValues : {lastName: '', firstName: ''}),\r\n    validate: (values) => {\r\n        const errors: FormikErrors<FormValues> = {};\r\n        if (!values.firstName || !values.firstName.trim()) {\r\n            errors.firstName = 'This field is required!';\r\n        } else if (!/^([^0-9]*)$/.test(values.firstName)) {\r\n            errors.firstName = 'Invalid field format';\r\n        }\r\n\r\n        if (!values.lastName || !values.lastName.trim()) {\r\n            errors.lastName = 'This field is required!';\r\n        } else if (!/^([^0-9]*)$/.test(values.lastName)) {\r\n            errors.lastName = 'Invalid field format';\r\n        }\r\n        return errors;\r\n\r\n    },\r\n    handleSubmit: (values, {props}) => {\r\n        props.submit(values)\r\n    }\r\n})(InnerForm)\r\n","export const formatDate = (date:Date):string =>{\r\n    const y = date.getFullYear();\r\n    const m = date.getMonth() < 10 ? `0${date.getMonth()+1}` : date.getMonth() + 1\r\n    const d = date.getDate() < 10 ? `0${date.getDate()}`: date.getDate()\r\n    return `${y}-${m}-${d}`\r\n}","import React, {FC} from 'react';\r\nimport {Button, Form, Input, Select, DatePicker} from 'antd';\r\nimport {FormikProps, withFormik, FormikErrors} from 'formik';\r\n\r\nimport moment, {Moment} from 'moment'\r\nimport {formatDate} from '../utils/date';\r\nimport {AuthorType} from \"../store/reducers/authors/authorsReducer\";\r\n\r\nexport interface FormValues {\r\n    title: string,\r\n    authorID: string\r\n    year: string | null\r\n}\r\n\r\nexport interface Props {\r\n    myValues?: {\r\n        title: string,\r\n        year: string\r\n        authorID: string\r\n    }\r\n    authors: AuthorType[],\r\n    submit: (payload: FormValues) => void\r\n    loading: boolean\r\n}\r\n\r\ninterface OtherProps {\r\n    loading: boolean,\r\n    myValues?: {\r\n        title: string,\r\n        year: string\r\n        authorID: string\r\n    }\r\n    authors: AuthorType[],\r\n}\r\n\r\nconst InnerForm: FC<OtherProps & FormikProps<FormValues>> =\r\n    ({\r\n         authors,\r\n         loading,\r\n         values,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         errors,\r\n         touched,\r\n         setFieldValue\r\n     }) => {\r\n        const selectDate = (date: Moment | null) => {\r\n            if (date) {\r\n                setFieldValue('year', formatDate(date.toDate()))\r\n            }\r\n        }\r\n        return (\r\n            <Form onFinish={handleSubmit}>\r\n                <Form.Item\r\n                    validateStatus={touched.title && errors.title ? 'error' : 'success'}\r\n                    help={touched.title && errors.title}\r\n                >\r\n                    <Input\r\n                        name=\"title\"\r\n                        placeholder=\"title\"\r\n                        value={values.title}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    validateStatus={touched.year && errors.year ? 'error' : 'success'}\r\n                    help={touched.year && errors.year}\r\n                >\r\n                    <DatePicker name=\"year\" value={values.year ? moment(values.year) : null} onChange={selectDate}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"authorID\"\r\n                    validateStatus={touched.authorID && errors.authorID ? 'error' : 'success'}\r\n                    help={touched.authorID && errors.authorID}\r\n                >\r\n                    <Select\r\n                        defaultValue={values.authorID}\r\n                        onBlur={handleBlur}\r\n                        onChange={(value) => setFieldValue('authorID', value)}\r\n                    >\r\n                        {\r\n                            authors.map(el => (\r\n                                <Select.Option\r\n                                    key={el.id}\r\n                                    value={el.id}\r\n                                >\r\n                                    {`${el.first_name} ${el.last_name}`}\r\n                                </Select.Option>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\r\n                        Создать\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n\r\nexport const BookForm = withFormik<Props, FormValues>({\r\n    mapPropsToValues: (props) => {\r\n        return props.myValues ? props.myValues : {\r\n            title: '',\r\n            year: null,\r\n            authorID: ''\r\n        }\r\n    },\r\n    validate: (values) => {\r\n        const errors: FormikErrors<FormValues> = {};\r\n        if (!values.title || !values.title.trim()) {\r\n            errors.title = 'This field is required!';\r\n        }\r\n        if (!values.year) {\r\n            errors.year = 'This field is required!';\r\n        }\r\n        if (!values.authorID) {\r\n            debugger\r\n            errors.authorID = 'This field is required!';\r\n        }\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, {props}) => {\r\n        props.submit(values)\r\n    }\r\n})(InnerForm)\r\n","import React from \"react\";\r\nimport {Button, Row, Table} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {booksActions, BooksState} from \"../store/reducers/books/booksReducer\";\r\nimport {AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\nimport {BackDrop} from \"../components/BackDrop\";\r\n\r\n\r\nexport const Books: React.FC = () => {\r\n\r\n    const {books, isLoading} = useSelector<AppRootStateType, BooksState>( state => state.books)\r\n    const {authors} = useSelector<AppRootStateType, AuthorsState>( state => state.authors)\r\n    const dispatch = useDispatch()\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'AuthorFirstName',\r\n            dataIndex: 'authorFirstName',\r\n            key: 'authorFirstName',\r\n        },\r\n        {\r\n            title: 'AuthorLastName',\r\n            dataIndex: 'authorLastName',\r\n            key: 'authorLastName',\r\n        },\r\n        {\r\n            title:'Year',\r\n            dataIndex:'year',\r\n            key:'year'\r\n        },\r\n        {\r\n            title:'More',\r\n            dataIndex:   'more',\r\n            key:'more',\r\n            render: (id: string) => <NavLink to={`/book/${id}`}>more</NavLink>,\r\n\r\n        },\r\n        {\r\n            title: 'Edit',\r\n            key: 'edit',\r\n            dataIndex: 'edit',\r\n            render: (id: string) => <NavLink to={`/book/edit/${id}`}>edit</NavLink>\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            key: 'delete',\r\n            dataIndex: 'delete',\r\n            render: (id: string) => <Button onClick={()=>{dispatch(booksActions.removeBook(id))}}>delete</Button>\r\n        }\r\n    ];\r\n\r\n    const dataSource = books.map(el=>{\r\n        return {\r\n            key: el.id,\r\n            title:el.title,\r\n            authorFirstName: authors[el.author_id]? authors[el.author_id].first_name : '',\r\n            authorLastName:authors[el.author_id]? authors[el.author_id].last_name : '',\r\n            year:el.year,\r\n            more: el.id,\r\n            edit: el.id,\r\n            delete: el.id\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <BackDrop/>}\r\n            <div style={{margin: 20}}>\r\n            <Row justify={'end'}><Button type=\"link\"><NavLink\r\n                to={'/book/create'}>Create+</NavLink></Button>\r\n            </Row>\r\n                <Table  columns={columns}\r\n                        dataSource={dataSource}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button, Row, Table} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {AuthorsState, deleteAuthorTC} from \"../store/reducers/authors/authorsReducer\";\r\nimport {BackDrop} from \"../components/BackDrop\";\r\n\r\n\r\nexport const Authors: React.FC = () => {\r\n\r\n    const {authors, isLoading} = useSelector<AppRootStateType, AuthorsState>( state => state.authors)\r\n    const dispatch = useDispatch()\r\n\r\n    const columns = [\r\n        {\r\n            title: 'FirstName',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n        },\r\n        {\r\n            title: 'SecondName',\r\n            dataIndex: 'secondName',\r\n            key: 'secondName',\r\n        },\r\n        {\r\n            title: 'More',\r\n            dataIndex: 'more',\r\n            key: 'address',\r\n            render: (id: string) => <NavLink to={`/author/${id}`}>more</NavLink>\r\n        },\r\n        {\r\n            title: 'Edit',\r\n            key: 'edit',\r\n            dataIndex: 'edit',\r\n            render: (id: string) => <NavLink to={`/author/edit/${id}`}>edit</NavLink>\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            key: 'delete',\r\n            dataIndex: 'delete',\r\n            render:(id:string)=> <Button onClick={ ()=>{dispatch(deleteAuthorTC(id))} }>delete</Button>\r\n        }\r\n    ]\r\n\r\n\r\n    const keys = Object.keys(authors)\r\n\r\n    const dataSource =  keys.map( (id)=>{\r\n        return {\r\n            key: 'key',\r\n            firstName: authors[id].first_name,\r\n            secondName: authors[id].last_name,\r\n            more: id,\r\n            edit: id,\r\n            delete: id\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <BackDrop/>}\r\n            <div style={{margin: 20}}>\r\n                <Row justify={'end'}><Button type=\"link\"><NavLink\r\n                    to={'/author/create'}>Create+</NavLink></Button>\r\n                </Row>\r\n                <Table  columns={columns}\r\n                        dataSource={dataSource}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {Col, Row, Typography} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <Row justify={'center'} align={'middle'} className={'h100'}>\r\n            <Col>\r\n                <Typography.Title><NavLink to={'/books'}>Books</NavLink></Typography.Title>\r\n                <Typography.Title><NavLink to={'/authors'}>Authors</NavLink></Typography.Title>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import {Layout, Row} from \"antd\";\r\nimport {AuthorForm, FormValues} from \"../components/AuthorForm\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {addAuthorTC, AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const AddAuthor:React.FC = () => {\r\n\r\n    const {isLoading, status} = useSelector<AppRootStateType, AuthorsState>( state => state.authors)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmitHandler = (values: FormValues) => {\r\n        const firstName = values.firstName.trim()\r\n        const lastName = values.lastName.trim()\r\n        dispatch(addAuthorTC({firstName, lastName}))\r\n    }\r\n    if (status === 'success') return <Redirect to={'/authors'}/>\r\n    return(\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <AuthorForm submit={onSubmitHandler} loading={isLoading}/>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Layout, Row} from \"antd\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {addBookTC, booksActions, BooksState, StatusType} from \"../store/reducers/books/booksReducer\";\r\nimport {AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\nimport {BookForm, FormValues} from \"../components/BookForm\";\r\nimport {formatDate} from \"../utils/date\";\r\n\r\nexport const AddBook: React.FC = () => {\r\n    // const {isLoading} = useSelector<AppRootStateType, BooksState>(state => state.books)\r\n    // const status = useSelector<AppRootStateType, StatusType>(state => state.books.status)\r\n\r\n    const {isLoading, status} = useSelector<AppRootStateType, BooksState>( state => state.books)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const {authors} = useSelector<AppRootStateType, AuthorsState>(state => state.authors)\r\n    // const {addBookTC} = useActions()\r\n    const authorsKeys = Object.keys(authors)\r\n    const allAuthors = authorsKeys.map(id => authors[id])\r\n    const onSubmitHandler = (values: FormValues) => {\r\n        if (values.year) {\r\n            dispatch (addBookTC( {\r\n                    title: values.title,\r\n                    author_id: values.authorID,\r\n                    year: values.year,\r\n                    created_at: formatDate(new Date())\r\n                }\r\n            ))\r\n        }\r\n    }\r\n    if (status === 'success') return <Redirect to={'/books'}/>\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <BookForm loading={isLoading} submit={onSubmitHandler} authors={allAuthors}/>\r\n            </Row>\r\n        </Layout>\r\n    );\r\n};","import React, { FC } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Col, Row, Typography } from 'antd';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\n\r\nexport const AboutAuthor: FC = () => {\r\n    const params = useParams<{ id: string }>()\r\n    const authors = useSelector<AppRootStateType, AuthorsState>(state => state.authors)\r\n    return (\r\n\r\n        <Row justify={'center'} align={'middle'} className={'h100'}>\r\n            <Col>\r\n                <Typography.Title>First Name: {authors.authors[params.id].first_name}</Typography.Title>\r\n                <Typography.Title>Last Name: {authors.authors[params.id].last_name}</Typography.Title>\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {BooksState} from \"../store/reducers/books/booksReducer\";\r\nimport {AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\nimport {Col, Row, Typography} from \"antd\";\r\n\r\n\r\nexport const AboutBook: React.FC = () => {\r\n    const params = useParams<{ id: string }>()\r\n    const books = useSelector<AppRootStateType, BooksState>(state => state.books)\r\n    const authors = useSelector<AppRootStateType, AuthorsState>(state => state.authors)\r\n    return (\r\n\r\n        <Row justify={'center'} align={'middle'} className={'h100'}>\r\n            <Col>\r\n                <Typography.Title>book title:{books.books.filter(el=> el.id === params.id)[0].title}</Typography.Title>\r\n                <Typography.Title>Author's first name: {authors.authors[books.books.filter(el=> el.id === params.id)[0].author_id].first_name}</Typography.Title>\r\n                <Typography.Title>Author's last name: {authors.authors[books.books.filter(el=> el.id === params.id)[0].author_id].last_name}</Typography.Title>\r\n                <Typography.Title>Year: {books.books.filter(el=> el.id === params.id)[0].year}</Typography.Title>\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {AuthorsState, editAuthorTC} from \"../store/reducers/authors/authorsReducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {AuthorForm, FormValues} from \"../components/AuthorForm\";\r\nimport {Layout, Row} from \"antd\";\r\n\r\nexport const EditAuthor:React.FC = () => {\r\n\r\n    const {authors, status, isLoading} = useSelector<AppRootStateType, AuthorsState>(state => state.authors)\r\n    const params = useParams<{ id: string }>()\r\n    const {id, last_name, first_name} = authors[params.id]\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmitHandler = (values:FormValues) => {\r\n        const firstName = values.firstName.trim()\r\n        const lastName = values.lastName.trim()\r\n        dispatch(editAuthorTC({id,lastName, firstName}))\r\n    }\r\n    if (status === 'success') return <Redirect to={'/authors'}/>\r\n\r\n    return (\r\n         <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <AuthorForm submit={onSubmitHandler} myValues={{lastName: last_name, firstName: first_name}}\r\n                            loading={isLoading}/>\r\n            </Row>\r\n        </Layout>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Layout, Row} from \"antd\";\r\nimport {BookForm, FormValues} from \"../components/BookForm\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {BooksState, editBookTC} from \"../store/reducers/books/booksReducer\";\r\nimport {AuthorsState} from \"../store/reducers/authors/authorsReducer\";\r\n\r\nexport const EditBook:React.FC = () => {\r\n    const {isLoading, status, books} = useSelector<AppRootStateType, BooksState>(state => state.books)\r\n    const {authors} = useSelector<AppRootStateType, AuthorsState>(state => state.authors)\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<{ id: string }>()\r\n    const {title, year, author_id} = books.filter(el => el.id === id)[0]\r\n    const authorsKeys = Object.keys(authors)\r\n    const allAuthors = authorsKeys.map(authorID => authors[authorID])\r\n    const onSubmitHandler = (values: FormValues) => {\r\n        if (values.year) {\r\n            dispatch(editBookTC({id: id, year: values.year, title: values.title, authorID: values.authorID}))\r\n        }\r\n    }\r\n    if (status === 'success') return <Redirect to={'/books'}/>\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <BookForm loading={isLoading} submit={onSubmitHandler} authors={allAuthors}\r\n                          myValues={{title, year, authorID: author_id}}/>\r\n            </Row>\r\n        </Layout>\r\n    );\r\n}","import React from 'react';\r\nimport {Layout, Menu, Row} from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {RouterNames} from \"../routes/routes\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify={'center'}>\r\n                <Menu mode={'horizontal'} theme={'dark'} selectable={false}>\r\n                    <Menu.Item key={RouterNames.MAIN}>\r\n                        <NavLink to={RouterNames.MAIN}>Main</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={RouterNames.BOOKS}>\r\n                        <NavLink to={RouterNames.BOOKS}>Books</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={RouterNames.AUTHORS}>\r\n                        <NavLink to={RouterNames.AUTHORS}>Authors</NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Row>\r\n        </Layout.Header>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {RouterNames, routes} from \"../routes/routes\";\r\n\r\nexport const AppRouter: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            {\r\n                routes.map(route=>{\r\n                    return <Route\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.component}\r\n                        key={route.path}\r\n                    />\r\n                })\r\n            }\r\n            {/*<Redirect to={RouterNames.MAIN}/>*/}\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar\";\nimport {AppRouter} from \"./components/AppRouter\";\nimport { Layout } from 'antd';\n\nfunction App() {\n  return (\n    <Layout>\n        <Navbar/>\n        <Layout.Content className={'h100'}>\n            <AppRouter/>\n        </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {BooksActionsType, booksReducer} from \"./reducers/books/booksReducer\";\r\nimport {AuthorsActionsType, authorsReducer} from \"./reducers/authors/authorsReducer\";\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    books:booksReducer,\r\n    authors:authorsReducer\r\n})\r\n\r\n\r\nlet preloadedState\r\nconst persistedStateString = localStorage.getItem('app-state')\r\nif (persistedStateString) {\r\n    preloadedState = JSON.parse(persistedStateString)\r\n}\r\n\r\nexport const store = createStore(rootReducer, preloadedState, applyMiddleware(thunkMiddleware));\r\n\r\ntype ActionsType =\r\n    | AuthorsActionsType\r\n    | BooksActionsType\r\n\r\n//type of all Thunk creators\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, ActionsType>\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n// export type RootState = ReturnType<typeof store.getState>\r\n\r\n\r\n\r\n\r\nstore.subscribe( ()=>{\r\n    // при изменении стейта это код будет отрабатываться\r\n    localStorage.setItem('app-state', JSON.stringify(store.getState()))\r\n} )\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {store} from \"./store/store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}